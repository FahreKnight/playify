[{"C:\\Users\\Fatih\\Desktop\\proje\\src\\index.js":"1","C:\\Users\\Fatih\\Desktop\\proje\\src\\App.tsx":"2","C:\\Users\\Fatih\\Desktop\\proje\\src\\components\\Dashboard\\Navi.tsx":"3","C:\\Users\\Fatih\\Desktop\\proje\\src\\components\\Dashboard\\Dashboard.tsx":"4","C:\\Users\\Fatih\\Desktop\\proje\\src\\components\\View\\PostListView.tsx":"5","C:\\Users\\Fatih\\Desktop\\proje\\src\\components\\Posting\\NewPost.tsx":"6","C:\\Users\\Fatih\\Desktop\\proje\\src\\components\\View\\PostView.tsx":"7","C:\\Users\\Fatih\\Desktop\\proje\\src\\components\\Posting\\NewCommunity.tsx":"8","C:\\Users\\Fatih\\Desktop\\proje\\src\\components\\View\\CommentView.tsx":"9","C:\\Users\\Fatih\\Desktop\\proje\\src\\store\\reducer.tsx":"10"},{"size":415,"mtime":1612097407426,"results":"11","hashOfConfig":"12"},{"size":386,"mtime":1609416396151,"results":"13","hashOfConfig":"12"},{"size":6036,"mtime":1612103488387,"results":"14","hashOfConfig":"12"},{"size":2519,"mtime":1612101224149,"results":"15","hashOfConfig":"12"},{"size":3855,"mtime":1609520948610,"results":"16","hashOfConfig":"12"},{"size":2431,"mtime":1612104501115,"results":"17","hashOfConfig":"12"},{"size":1733,"mtime":1609520620850,"results":"18","hashOfConfig":"12"},{"size":363,"mtime":1609091437607,"results":"19","hashOfConfig":"12"},{"size":2958,"mtime":1609518233154,"results":"20","hashOfConfig":"12"},{"size":1463,"mtime":1612103983115,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dgt6n8",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Fatih\\Desktop\\proje\\src\\index.js",[],"C:\\Users\\Fatih\\Desktop\\proje\\src\\App.tsx",[],["45","46"],"C:\\Users\\Fatih\\Desktop\\proje\\src\\components\\Dashboard\\Navi.tsx",[],"C:\\Users\\Fatih\\Desktop\\proje\\src\\components\\Dashboard\\Dashboard.tsx",["47","48"],"C:\\Users\\Fatih\\Desktop\\proje\\src\\components\\View\\PostListView.tsx",["49","50","51","52","53","54","55","56","57","58"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport { List, Avatar, Button, Skeleton, AutoComplete, Tooltip, Row } from 'antd';\r\nimport { PostView } from './PostView';\r\nimport CommentView from './CommentView';\r\nimport moment from 'moment';\r\n\r\nconst count = 3;\r\n\r\nclass PostListView extends React.Component {\r\n  state = {\r\n    initLoading: true,\r\n    loading: false,\r\n    data: [\r\n    { title: \"Example First Title\", content: \"Example First Content Blah blah blah blah blah blah blah blah \\\r\n    lorem ipsum dolor sit amet blah blah blah blah blah \" , \r\n    image: \"https://ms.yugipedia.com//thumb/f/fd/Back-Anime-ZX-2.png/627px-Back-Anime-ZX-2.png\",\r\n    comments: \r\n    [{author: \"Shitty Mitty\", content: \"What a shitty comment\"}, \r\n    {author: \"Hello Kitty\", content: \"Eenie meenie minie moo\"}\r\n  ]},\r\n    { title: \"Example Second Title\", content: \"Example Second Content\", \r\n    image: \"https://ms.yugipedia.com//8/80/Akiza-TFSP.png\",\r\n    comments: \r\n    [{author: \"Shitty Mitty\", content: \"What a shitty comment\"}, \r\n    {author: \"Hello Kitty\", content: \"Eenie meenie minie moo\"}\r\n  ]},\t\r\n    { title: \"Example Third Title\", content: \"Example Third Content\", \r\n    comments: \r\n    [{author: \"Shitty Mitty\", content: \"What a shitty comment\"}, \r\n    {author: \"Hello Kitty\", content: \"Eenie meenie minie moo\"}\r\n  ]}\r\n\t],\r\n    list: [\r\n      { title: \"Example First Title\", content: \"Example First Content Blah blah blah blah blah blah blah blah \\\r\n      lorem ipsum dolor sit amet blah blah blah blah blah \",\r\n      image: \"https://ms.yugipedia.com//thumb/f/fd/Back-Anime-ZX-2.png/627px-Back-Anime-ZX-2.png\",\r\n      comments: \r\n      [{author: \"Shitty Mitty\", content: \"What a shitty comment\"}, \r\n      {author: \"Hello Kitty\", content: \"Eenie meenie minie moo\"}\r\n    ]},\r\n      { title: \"Example Second Title\", content: \"Example Second Content\", \r\n      image: \"https://ms.yugipedia.com//8/80/Akiza-TFSP.png\",\r\n      comments: \r\n      [{author: \"Shitty Mitty\", content: \"What a shitty comment\"}, \r\n      {author: \"Hello Kitty\", content: \"Eenie meenie minie moo\"}\r\n    ]},\t\r\n      { title: \"Example Third Title\", content: \"Example Third Content\", \r\n      comments: \r\n      [{author: \"Shitty Mitty\", content: \"What a shitty comment\"}, \r\n      {author: \"Hello Kitty\", content: \"Eenie meenie minie moo\"}\r\n    ]}\r\n    ]\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({initLoading:false});\r\n    this.getData();\r\n  }\r\n\r\n  getData = () => {\r\n  };\r\n\r\n  onLoadMore = () => {\r\n      \r\n    this.setState({\r\n        loading: true,\r\n        list: this.state.list.concat(this.state.data)\r\n    });\r\n    this.getData(); //set the list to the new concatenated list\r\n    this.setState({\r\n        loading: false,\r\n        list: this.state.list.concat(this.state.data)\r\n    });\r\n    };\r\n\r\n  render() {\r\n    const { initLoading, loading, list } = this.state;\r\n    const loadMore =\r\n      !initLoading && !loading ? (\r\n        <div\r\n          style={{\r\n            textAlign: 'center',\r\n            marginTop: 12,\r\n            height: 32,\r\n            lineHeight: '32px',\r\n          }}\r\n        >\r\n          <Button onClick={this.onLoadMore}>Load more</Button>\r\n        </div>\r\n      ) : null;\r\n\r\n    return (\r\n    <div>\r\n        <List\r\n        style = {{overflow: \"auto\", overflowX: \"hidden\", height:610}}\r\n        loading={initLoading}\r\n        itemLayout=\"horizontal\"\r\n        loadMore={loadMore}\r\n        dataSource={list}\r\n        renderItem={item => (\r\n          <List.Item>\r\n              <Skeleton loading = {loading} active>\r\n                <PostView title = {item.title} content = {item.content} \r\n                commentData = {item.comments} image = {item.image}></PostView>\r\n              </Skeleton>\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default PostListView;","C:\\Users\\Fatih\\Desktop\\proje\\src\\components\\Posting\\NewPost.tsx",["59"],"C:\\Users\\Fatih\\Desktop\\proje\\src\\components\\View\\PostView.tsx",[],"C:\\Users\\Fatih\\Desktop\\proje\\src\\components\\Posting\\NewCommunity.tsx",[],"C:\\Users\\Fatih\\Desktop\\proje\\src\\components\\View\\CommentView.tsx",["60","61","62"],"import React, { ReactNode, useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport { Comment, Tooltip, List, Button, Form, Avatar } from 'antd';\r\nimport moment from 'moment';\r\nimport { CommentData } from \"../View/Types\"\r\nimport TextArea from 'antd/lib/input/TextArea';\r\n\r\nconst Editor = ({ onChange, onSubmit, submitting, value } :any) => (\r\n  <>\r\n    <Form.Item>\r\n      <TextArea rows={4} onChange={onChange} value={value} />\r\n    </Form.Item>\r\n    <Form.Item>\r\n      <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\r\n        Add Comment\r\n      </Button>\r\n    </Form.Item>\r\n  </>\r\n);\r\n\r\nconst CommentView = (props:any) => {\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [value, setValue] = useState<string>('');\r\n    const [comments, setComments] = useState<any[]>(props.data);\r\n\r\n    const handleSubmit = () => {\r\n      if (!value) {\r\n        return;\r\n      }\r\n  \r\n      setSubmitting(true);\r\n  \r\n      setTimeout(() => {\r\n        setSubmitting(false);\r\n        setValue('');\r\n        setComments(\r\n          [\r\n\r\n            ...comments,\r\n            {\r\n              author: \"Han Solo\",\r\n              content: value,\r\n            }\r\n          ],\r\n        )\r\n      }, 1000);\r\n    };\r\n  \r\n    const handleChange = (e:any) => {\r\n      setValue(e.target.value);\r\n    };\r\n\r\n    const replyEditorRender = \r\n      (\r\n        <div>\r\n          <Comment\r\n            avatar={\r\n              <Avatar\r\n                src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n                alt=\"Han Solo\"\r\n              />\r\n            }\r\n            content={\r\n              <Editor\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n                submitting={submitting}\r\n                value={value}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n      );\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <List\r\n              className=\"comment-list\"\r\n              header={`${props.data.length} replies`}\r\n              itemLayout=\"horizontal\"\r\n              dataSource={comments}\r\n              renderItem={(item:CommentData) => {return(\r\n                <li>\r\n                  <Comment\r\n                    actions={[]}\r\n                    author= {item.author}\r\n                    avatar=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n                    content={(<p>{item.content}</p>)}\r\n                    datetime={<Tooltip title={moment().subtract(2, 'days').format('YYYY-MM-DD HH:mm:ss')}>\r\n                    <span>{moment().subtract(2, 'days').fromNow()}</span>\r\n                  </Tooltip>}\r\n                  >\r\n                  </Comment>\r\n                </li>\r\n              )}}\r\n              />\r\n              {props.replyEditorVisible ? replyEditorRender : <div></div>}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\n\r\n\r\n\r\nexport default CommentView;","C:\\Users\\Fatih\\Desktop\\proje\\src\\store\\reducer.tsx",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":15,"column":9,"nodeType":"69","messageId":"70","endLine":15,"endColumn":14},{"ruleId":"67","severity":1,"message":"71","line":15,"column":16,"nodeType":"69","messageId":"70","endLine":15,"endColumn":24},{"ruleId":"67","severity":1,"message":"72","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":16},{"ruleId":"67","severity":1,"message":"73","line":4,"column":16,"nodeType":"69","messageId":"70","endLine":4,"endColumn":22},{"ruleId":"67","severity":1,"message":"74","line":4,"column":42,"nodeType":"69","messageId":"70","endLine":4,"endColumn":54},{"ruleId":"67","severity":1,"message":"75","line":4,"column":56,"nodeType":"69","messageId":"70","endLine":4,"endColumn":63},{"ruleId":"67","severity":1,"message":"76","line":4,"column":65,"nodeType":"69","messageId":"70","endLine":4,"endColumn":68},{"ruleId":"67","severity":1,"message":"77","line":6,"column":8,"nodeType":"69","messageId":"70","endLine":6,"endColumn":19},{"ruleId":"67","severity":1,"message":"78","line":7,"column":8,"nodeType":"69","messageId":"70","endLine":7,"endColumn":14},{"ruleId":"67","severity":1,"message":"79","line":9,"column":7,"nodeType":"69","messageId":"70","endLine":9,"endColumn":12},{"ruleId":"80","severity":1,"message":"81","line":16,"column":46,"nodeType":"82","messageId":"83","endLine":17,"endColumn":58},{"ruleId":"80","severity":1,"message":"81","line":36,"column":48,"nodeType":"82","messageId":"83","endLine":37,"endColumn":60},{"ruleId":"84","severity":1,"message":"85","line":37,"column":5,"nodeType":"86","endLine":37,"endColumn":28,"suggestions":"87"},{"ruleId":"67","severity":1,"message":"88","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":26},{"ruleId":"67","severity":1,"message":"89","line":1,"column":28,"nodeType":"69","messageId":"70","endLine":1,"endColumn":37},{"ruleId":"67","severity":1,"message":"72","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":16},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"@typescript-eslint/no-unused-vars","'posts' is assigned a value but never used.","Identifier","unusedVar","'setPosts' is assigned a value but never used.","'ReactDOM' is defined but never used.","'Avatar' is defined but never used.","'AutoComplete' is defined but never used.","'Tooltip' is defined but never used.","'Row' is defined but never used.","'CommentView' is defined but never used.","'moment' is defined but never used.","'count' is assigned a value but never used.","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'prepareCommunityData'. Either include it or remove the dependency array.","ArrayExpression",["92"],"'ReactNode' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [isNewCommunityVisible, prepareCommunityData]",{"range":"95","text":"96"},[1386,1409],"[isNewCommunityVisible, prepareCommunityData]"]