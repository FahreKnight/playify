[{"C:\\Users\\mamik\\Desktop\\npm-i çekmeyi unutma\\src\\index.js":"1","C:\\Users\\mamik\\Desktop\\npm-i çekmeyi unutma\\src\\reportWebVitals.js":"2","C:\\Users\\mamik\\Desktop\\npm-i çekmeyi unutma\\src\\App.tsx":"3","C:\\Users\\mamik\\Desktop\\npm-i çekmeyi unutma\\src\\components\\Dashboard\\Navi.tsx":"4","C:\\Users\\mamik\\Desktop\\npm-i çekmeyi unutma\\src\\components\\Dashboard\\Dashboard.tsx":"5","C:\\Users\\mamik\\Desktop\\npm-i çekmeyi unutma\\src\\components\\registration\\login.tsx":"6","C:\\Users\\mamik\\Desktop\\npm-i çekmeyi unutma\\src\\components\\registration\\signup.tsx":"7","C:\\Users\\mamik\\Desktop\\npm-i çekmeyi unutma\\src\\components\\View\\PostListView.tsx":"8","C:\\Users\\mamik\\Desktop\\npm-i çekmeyi unutma\\src\\components\\Posting\\NewPost.tsx":"9","C:\\Users\\mamik\\Desktop\\npm-i çekmeyi unutma\\src\\components\\View\\PostView.tsx":"10","C:\\Users\\mamik\\Desktop\\npm-i çekmeyi unutma\\src\\components\\Posting\\NewCommunity.tsx":"11","C:\\Users\\mamik\\Desktop\\npm-i çekmeyi unutma\\src\\components\\View\\CommentView.tsx":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":386,"mtime":1609416396151,"results":"16","hashOfConfig":"14"},{"size":2565,"mtime":1609083191305,"results":"17","hashOfConfig":"14"},{"size":2789,"mtime":1609769451034,"results":"18","hashOfConfig":"14"},{"size":945,"mtime":1609769526501,"results":"19","hashOfConfig":"14"},{"size":1793,"mtime":1608997152493,"results":"20","hashOfConfig":"14"},{"size":3843,"mtime":1609769558611,"results":"21","hashOfConfig":"14"},{"size":2761,"mtime":1609091994961,"results":"22","hashOfConfig":"14"},{"size":1733,"mtime":1609520620850,"results":"23","hashOfConfig":"14"},{"size":363,"mtime":1609091437607,"results":"24","hashOfConfig":"14"},{"size":2958,"mtime":1609518233154,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"u3ayoq",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"33"},"C:\\Users\\mamik\\Desktop\\npm-i çekmeyi unutma\\src\\index.js",[],["55","56"],"C:\\Users\\mamik\\Desktop\\npm-i çekmeyi unutma\\src\\reportWebVitals.js",[],"C:\\Users\\mamik\\Desktop\\npm-i çekmeyi unutma\\src\\App.tsx",[],["57","58"],"C:\\Users\\mamik\\Desktop\\npm-i çekmeyi unutma\\src\\components\\Dashboard\\Navi.tsx",["59"],"import { Button, Col, Input, Row } from \"antd\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport React, { useState } from \"react\";\r\nimport SignUp from \"../registration/signup\";\r\nimport Login from \"../registration/login\";\r\n\r\nconst Navi = () => {\r\n\tconst [isLoginModalVisible, setIsLoginModalVisible] = useState(false);\r\n\tconst [isSignUpModalVisible, setIsSignUpModalVisible] = useState(false);\r\n\r\n\tconst toggleLoginModal = () => setIsLoginModalVisible(!isLoginModalVisible);\r\n\tconst toggleSignUpModal = () =>\r\n\t\tsetIsSignUpModalVisible(!isSignUpModalVisible);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Login\"\r\n\t\t\t\tvisible={isLoginModalVisible}\r\n\t\t\t\tonCancel={() => toggleLoginModal()}\r\n\t\t\t\tonOk={() => toggleLoginModal()}\r\n\t\t\t\tclosable\r\n\t\t\t\tfooter={\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tkey=\"back\"\r\n\t\t\t\t\t\t\tonClick={() => toggleLoginModal()}\r\n\t\t\t\t\t\t>Cancel</Button>,\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tkey=\"submit\"\r\n\t\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={() => toggleLoginModal()}\r\n\t\t\t\t\t\t\t>Login</Button>,\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<Login />\r\n\t\t\t</Modal>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Login\"\r\n\t\t\t\tvisible={isLoginModalVisible}\r\n\t\t\t\tonCancel={() => toggleLoginModal()}\r\n\t\t\t\tonOk={() => toggleLoginModal()}\r\n\t\t\t\tclosable\r\n\t\t\t\tfooter={\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tkey=\"back\"\r\n\t\t\t\t\t\t\tonClick={() => toggleLoginModal()}\r\n\t\t\t\t\t\t>Cancel</Button>,\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tkey=\"submit\"\r\n\t\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={() => toggleLoginModal()}\r\n\t\t\t\t\t\t\t>Login</Button>,\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<Login />\r\n\t\t\t</Modal>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Sign Up\"\r\n\t\t\t\tvisible={isSignUpModalVisible}\r\n\t\t\t\tonCancel={() => toggleSignUpModal()}\r\n\t\t\t\tonOk={() => toggleSignUpModal()}\r\n                closable\r\n                footer={\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tkey=\"back\"\r\n\t\t\t\t\t\t\tonClick={() => toggleSignUpModal()}\r\n\t\t\t\t\t\t>Cancel</Button>,\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tkey=\"submit\"\r\n\t\t\t\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={() => toggleSignUpModal()}\r\n\t\t\t\t\t\t\t>Sign Up</Button>,\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<SignUp />\r\n\t\t\t</Modal>\r\n\t\t\t<Row gutter = {5}>\r\n\t\t\t\t<Col style = {{display:\"flex\"}}>\r\n\t\t\t\t\t<Search style = {{margin:\"auto\"}}\r\n\t\t\t\t\t\tplaceholder=\"Enter text to search\"\r\n\t\t\t\t\t\tonSearch={() => {}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col  style = {{display:\"flex\", alignSelf:\"end\"}}>\r\n\t\t\t\t\t<Button style = {{margin:\"auto\"}} onClick={() => toggleSignUpModal()}>SingUp</Button>\r\n\t\t\t\t\t<Button style = {{margin:\"auto\"}} onClick={() => toggleLoginModal()}>Login</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Navi;\r\n","C:\\Users\\mamik\\Desktop\\npm-i çekmeyi unutma\\src\\components\\Dashboard\\Dashboard.tsx",["60","61","62","63","64","65","66","67","68","69","70","71"],"C:\\Users\\mamik\\Desktop\\npm-i çekmeyi unutma\\src\\components\\registration\\login.tsx",[],"C:\\Users\\mamik\\Desktop\\npm-i çekmeyi unutma\\src\\components\\registration\\signup.tsx",[],"C:\\Users\\mamik\\Desktop\\npm-i çekmeyi unutma\\src\\components\\View\\PostListView.tsx",["72","73","74","75","76","77","78","79","80","81"],"C:\\Users\\mamik\\Desktop\\npm-i çekmeyi unutma\\src\\components\\Posting\\NewPost.tsx",["82"],"import React, { useState, Component } from \"react\";\r\nimport { Row, Col, Upload, message, Button, Select, Input, Modal } from \"antd\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { UploadOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport NewCommunity from \"./NewCommunity\";\r\nconst { Option } = Select;\r\n\r\nconst axios = require(\"axios\").default;\r\nconst axiosInstance = axios.create({\r\n\tbaseURL: \"http://localhost:8000/api/\",\r\n\ttimeout: 1000,\r\n\theaders: { \"X-Custom-Header\": \"foobar\" }\r\n});\r\n\r\nconst uploadProps = {\r\n\tname: \"file\",\r\n\taction: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\r\n\theaders: {\r\n\t\tauthorization: \"authorization-text\"\r\n\t},\r\n\tonChange(info: any) {\r\n\t\tif (info.file.status !== \"uploading\") {\r\n\t\t\tconsole.log(info.file, info.fileList);\r\n\t\t}\r\n\r\n\t\tif (info.file.status === \"done\") {\r\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully`);\r\n\t\t} else if (info.file.status === \"error\") {\r\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst NewPost = () => {\r\n\tconst [isNewCommunityModalVisible, setIsNewCommunityModalVisible] = useState(false);\r\n\tconst toggleNewCommunityModal = () => setIsNewCommunityModalVisible(!isNewCommunityModalVisible);\r\n\t<Modal\r\n\ttitle=\"Create New Community\"\r\n\tvisible={isNewCommunityModalVisible}\r\n\tonCancel={() => toggleNewCommunityModal()}\r\n\tonOk={() => toggleNewCommunityModal()}\r\n\tclosable\r\n>\r\n\t<NewCommunity></NewCommunity>\r\n</Modal>\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Row gutter = {[0, 24]}>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tdefaultValue=\"Eeyli\"\r\n\t\t\t\t\t\t\tstyle={{ width: 180 }}\r\n\t\t\t\t\t\t\tonChange={() => {}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Option value=\"EEyli\">Eeyli</Option>\r\n\t\t\t\t\t\t\t<Option value=\"Alaula\">Alaula</Option>\r\n\t\t\t\t\t\t\t<Option value=\"Camburleyli\">Camburleyli</Option>\r\n\t\t\t\t\t\t\t<Option value=\"Capcup\">Capcup</Option>\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Button icon={<PlusCircleOutlined />}\r\n\t\t\t\t\t\tonClick = {() => toggleNewCommunityModal()}></Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row gutter = {[0, 16]}>\r\n\t\t\t\t\t<Input placeholder = \"Title\"></Input>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row gutter = {[0, 8]}>\r\n\t\t\t\t<TextArea placeholder = \"Type something...\"></TextArea>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Upload\r\n\t\t\t\t\t{...uploadProps}\r\n\t\t\t\t\tlistType=\"picture\"\r\n\t\t\t\t\tclassName=\"upload-list-inline\"\r\n\t\t\t\t\taccept=\".jpg, .png\"\r\n\t\t\t\t\tbeforeUpload={(file) => {\r\n\t\t\t\t\t\tconst reader = new FileReader();\r\n\t\t\t\t\t\treader.onload = (e) => {\r\n\t\t\t\t\t\t\taxiosInstance.post(\"/upload\", {\r\n\t\t\t\t\t\t\t\tfileName: file.name,\r\n\t\t\t\t\t\t\t\tcontent: e.target?.result\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\treader.readAsBinaryString(file);\r\n\t\t\t\t\t\treturn false; //preventing upload\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button icon={<UploadOutlined />}>Upload</Button>\r\n\t\t\t\t</Upload>\r\n\t\t\t</div>\r\n\t\t);\r\n};\r\n\r\nexport default NewPost;\r\n","C:\\Users\\mamik\\Desktop\\npm-i çekmeyi unutma\\src\\components\\View\\PostView.tsx",[],"C:\\Users\\mamik\\Desktop\\npm-i çekmeyi unutma\\src\\components\\Posting\\NewCommunity.tsx",[],"C:\\Users\\mamik\\Desktop\\npm-i çekmeyi unutma\\src\\components\\View\\CommentView.tsx",["83","84","85"],"import React, { ReactNode, useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport { Comment, Tooltip, List, Button, Form, Avatar } from 'antd';\r\nimport moment from 'moment';\r\nimport { CommentData } from \"../View/Types\"\r\nimport TextArea from 'antd/lib/input/TextArea';\r\n\r\nconst Editor = ({ onChange, onSubmit, submitting, value } :any) => (\r\n  <>\r\n    <Form.Item>\r\n      <TextArea rows={4} onChange={onChange} value={value} />\r\n    </Form.Item>\r\n    <Form.Item>\r\n      <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\r\n        Add Comment\r\n      </Button>\r\n    </Form.Item>\r\n  </>\r\n);\r\n\r\nconst CommentView = (props:any) => {\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [value, setValue] = useState<string>('');\r\n    const [comments, setComments] = useState<any[]>(props.data);\r\n\r\n    const handleSubmit = () => {\r\n      if (!value) {\r\n        return;\r\n      }\r\n  \r\n      setSubmitting(true);\r\n  \r\n      setTimeout(() => {\r\n        setSubmitting(false);\r\n        setValue('');\r\n        setComments(\r\n          [\r\n\r\n            ...comments,\r\n            {\r\n              author: \"Han Solo\",\r\n              content: value,\r\n            }\r\n          ],\r\n        )\r\n      }, 1000);\r\n    };\r\n  \r\n    const handleChange = (e:any) => {\r\n      setValue(e.target.value);\r\n    };\r\n\r\n    const replyEditorRender = \r\n      (\r\n        <div>\r\n          <Comment\r\n            avatar={\r\n              <Avatar\r\n                src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n                alt=\"Han Solo\"\r\n              />\r\n            }\r\n            content={\r\n              <Editor\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n                submitting={submitting}\r\n                value={value}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n      );\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <List\r\n              className=\"comment-list\"\r\n              header={`${props.data.length} replies`}\r\n              itemLayout=\"horizontal\"\r\n              dataSource={comments}\r\n              renderItem={(item:CommentData) => {return(\r\n                <li>\r\n                  <Comment\r\n                    actions={[]}\r\n                    author= {item.author}\r\n                    avatar=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n                    content={(<p>{item.content}</p>)}\r\n                    datetime={<Tooltip title={moment().subtract(2, 'days').format('YYYY-MM-DD HH:mm:ss')}>\r\n                    <span>{moment().subtract(2, 'days').fromNow()}</span>\r\n                  </Tooltip>}\r\n                  >\r\n                  </Comment>\r\n                </li>\r\n              )}}\r\n              />\r\n              {props.replyEditorVisible ? replyEditorRender : <div></div>}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\n\r\n\r\n\r\nexport default CommentView;",{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":1,"column":23,"nodeType":"92","messageId":"93","endLine":1,"endColumn":28},{"ruleId":"90","severity":1,"message":"94","line":1,"column":20,"nodeType":"92","messageId":"93","endLine":1,"endColumn":24},{"ruleId":"90","severity":1,"message":"95","line":2,"column":17,"nodeType":"92","messageId":"93","endLine":2,"endColumn":26},{"ruleId":"90","severity":1,"message":"96","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":16},{"ruleId":"90","severity":1,"message":"97","line":4,"column":8,"nodeType":"92","messageId":"93","endLine":4,"endColumn":12},{"ruleId":"90","severity":1,"message":"98","line":5,"column":10,"nodeType":"92","messageId":"93","endLine":5,"endColumn":16},{"ruleId":"90","severity":1,"message":"99","line":5,"column":18,"nodeType":"92","messageId":"93","endLine":5,"endColumn":25},{"ruleId":"90","severity":1,"message":"100","line":6,"column":10,"nodeType":"92","messageId":"93","endLine":6,"endColumn":24},{"ruleId":"90","severity":1,"message":"101","line":7,"column":8,"nodeType":"92","messageId":"93","endLine":7,"endColumn":16},{"ruleId":"90","severity":1,"message":"102","line":9,"column":10,"nodeType":"92","messageId":"93","endLine":9,"endColumn":18},{"ruleId":"90","severity":1,"message":"103","line":11,"column":8,"nodeType":"92","messageId":"93","endLine":11,"endColumn":19},{"ruleId":"90","severity":1,"message":"104","line":22,"column":9,"nodeType":"92","messageId":"93","endLine":22,"endColumn":14},{"ruleId":"90","severity":1,"message":"105","line":22,"column":16,"nodeType":"92","messageId":"93","endLine":22,"endColumn":24},{"ruleId":"90","severity":1,"message":"106","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":16},{"ruleId":"90","severity":1,"message":"107","line":4,"column":16,"nodeType":"92","messageId":"93","endLine":4,"endColumn":22},{"ruleId":"90","severity":1,"message":"108","line":4,"column":42,"nodeType":"92","messageId":"93","endLine":4,"endColumn":54},{"ruleId":"90","severity":1,"message":"109","line":4,"column":56,"nodeType":"92","messageId":"93","endLine":4,"endColumn":63},{"ruleId":"90","severity":1,"message":"110","line":4,"column":65,"nodeType":"92","messageId":"93","endLine":4,"endColumn":68},{"ruleId":"90","severity":1,"message":"103","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":19},{"ruleId":"90","severity":1,"message":"111","line":7,"column":8,"nodeType":"92","messageId":"93","endLine":7,"endColumn":14},{"ruleId":"90","severity":1,"message":"112","line":9,"column":7,"nodeType":"92","messageId":"93","endLine":9,"endColumn":12},{"ruleId":"113","severity":1,"message":"114","line":16,"column":46,"nodeType":"115","messageId":"116","endLine":17,"endColumn":58},{"ruleId":"113","severity":1,"message":"114","line":36,"column":48,"nodeType":"115","messageId":"116","endLine":37,"endColumn":60},{"ruleId":"90","severity":1,"message":"95","line":1,"column":27,"nodeType":"92","messageId":"93","endLine":1,"endColumn":36},{"ruleId":"90","severity":1,"message":"117","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"118","line":1,"column":28,"nodeType":"92","messageId":"93","endLine":1,"endColumn":37},{"ruleId":"90","severity":1,"message":"106","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":16},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"@typescript-eslint/no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Component' is defined but never used.","'ReactDom' is defined but never used.","'Navi' is defined but never used.","'Upload' is defined but never used.","'message' is defined but never used.","'UploadOutlined' is defined but never used.","'TextArea' is defined but never used.","'PostView' is defined but never used.","'CommentView' is defined but never used.","'posts' is assigned a value but never used.","'setPosts' is assigned a value but never used.","'ReactDOM' is defined but never used.","'Avatar' is defined but never used.","'AutoComplete' is defined but never used.","'Tooltip' is defined but never used.","'Row' is defined but never used.","'moment' is defined but never used.","'count' is assigned a value but never used.","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","'ReactNode' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]